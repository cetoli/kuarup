#BlueJ class context
comment0.target=CalculadoraTest()
comment0.text=\nDefault\ constructor\ for\ test\ class\ CalculadoraTeste.\n\n
comment1.target=void\ testLimpa()
comment1.text=\nTeste\ do\ m\uFFFDtodo\ limpa().\n\n
comment10.target=void\ testEntraBaseDecLimpa()
comment10.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraBaseXLimpa()\nO\ objetivo\ \uFFFD\ verificar\ se\ o\ m\uFFFDtodo\ limpa()\ executar\uFFFD\ de\ forma\ correta\nap\uFFFDs\ uma\ chamada\ do\ m\uFFFDtodo\ entraBaseX().\n\n
comment11.target=void\ testEntraBaseBinLimpa()
comment11.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraBaseXLimpa()\nO\ objetivo\ \uFFFD\ verificar\ se\ o\ m\uFFFDtodo\ limpa()\ executar\uFFFD\ de\ forma\ correta\nap\uFFFDs\ uma\ chamada\ do\ m\uFFFDtodo\ entraBaseX().\n\n
comment12.target=void\ testEntraBaseHexLimpa()
comment12.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraBaseXLimpa()\nO\ objetivo\ \uFFFD\ verificar\ se\ o\ m\uFFFDtodo\ limpa()\ executar\uFFFD\ de\ forma\ correta\nap\uFFFDs\ uma\ chamada\ do\ m\uFFFDtodo\ entraBaseX().\n\n
comment13.target=void\ testEntraBaseDecSoma()
comment13.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraBaseXSoma()\nO\ objetivo\ \uFFFD\ verificar\ se\ o\ m\uFFFDtodo\ comandoSoma()\ retornar\uFFFD\ o\ valor\ zero\nna\ base\ especificada\ ap\uFFFDs\ uma\ chamada\ do\ m\uFFFDtodo\ entraBaseX().\n\n
comment14.target=void\ testEntraBaseBinSoma()
comment14.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraBaseXSoma()\nO\ objetivo\ \uFFFD\ verificar\ se\ o\ m\uFFFDtodo\ comandoSoma()\ retornar\uFFFD\ o\ valor\ zero\nna\ base\ especificada\ ap\uFFFDs\ uma\ chamada\ do\ m\uFFFDtodo\ entraBaseX().\n\n
comment15.target=void\ testEntraBaseHexSoma()
comment15.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraBaseXSoma()\nO\ objetivo\ \uFFFD\ verificar\ se\ o\ m\uFFFDtodo\ comandoSoma()\ retornar\uFFFD\ o\ valor\ zero\nna\ base\ especificada\ ap\uFFFDs\ uma\ chamada\ do\ m\uFFFDtodo\ entraBaseX().\n\n
comment16.target=void\ testEntraBaseDecEntraUm()
comment16.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraBaseXEntraUm()\nO\ objetivo\ \uFFFD\ verificar\ se\ as\ entradas\ dos\ operandos\ nas\ bases\ decimal,\nbin\uFFFDria\ e\ hexadecimal\ est\uFFFDo\ corretas.\n\n
comment17.target=void\ testEntraBaseBinEntraUm()
comment17.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraBaseXEntraUm()\nO\ objetivo\ \uFFFD\ verificar\ se\ as\ entradas\ dos\ operandos\ nas\ bases\ decimal,\nbin\uFFFDria\ e\ hexadecimal\ est\uFFFDo\ corretas.\n\n
comment18.target=void\ testEntraBaseHexEntraUm()
comment18.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraBaseXEntraUm()\nO\ objetivo\ \uFFFD\ verificar\ se\ as\ entradas\ dos\ operandos\ nas\ bases\ decimal,\nbin\uFFFDria\ e\ hexadecimal\ est\uFFFDo\ corretas.\n\n
comment19.target=void\ testEntraOpDecSomaEntraOpBin()
comment19.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraOpBaseXSomaEntraOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ as\ entradas\ dos\ operandos\ nas\ bases\ decimal,\nbin\uFFFDria\ e\ hexadecimal\ est\uFFFDo\ corretas.\n\n
comment2.target=void\ testEntraUmUmaVez()
comment2.text=\nTeste\ do\ m\uFFFDtodo\ entraUm()\nValida\uFFFD\uFFFDo\ do\ m\uFFFDtodo\ testEntraUmaVez()\ utilizando\ apenas\ uma\ chamada\ do\nm\uFFFDtodo\ entraUm().\n\n
comment20.target=void\ testEntraOpDecSomaEntraOpHex()
comment20.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraOpBaseXSomaEntraOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ as\ entradas\ dos\ operandos\ nas\ bases\ decimal,\nbin\uFFFDria\ e\ hexadecimal\ est\uFFFDo\ corretas.\n\n
comment21.target=void\ testSomaB1eB1sai0b10()
comment21.text=\nTesta\ a\ soma\ de\ 1\ +\ 1\ bin\uFFFDrio.\n\n
comment22.target=void\ testSomaB11eB11sai0b110()
comment22.text=\nTesta\ a\ soma\ de\ 11\ +\ 11\ bin\uFFFDrio.\n\n
comment23.target=void\ testSomaB111eB111sai0b1110()
comment23.text=\nTesta\ a\ soma\ de\ 111\ +\ 111\ bin\uFFFDrio.\n\n
comment24.target=void\ testSomaH1eH1sai0x2()
comment24.text=\nTesta\ a\ soma\ de\ 1\ +\ 1\ hexadecimal.\n\n
comment25.target=void\ test2SomaH11eH11sai0x22()
comment25.text=\nTesta\ a\ soma\ de\ 11\ +\ 11\ hexadecimal.\n\n
comment26.target=void\ testSomaH1eH111sai0x112()
comment26.text=\nTesta\ a\ soma\ de\ 1\ +\ 111\ hexadecimal.\n\n
comment27.target=void\ testEntraOpBinSomaEntraOpDec()
comment27.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraOpBaseXSomaEntraOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ as\ entradas\ dos\ operandos\ nas\ bases\ decimal,\nbin\uFFFDria\ e\ hexadecimal\ est\uFFFDo\ corretas.\n\n
comment28.target=void\ testEntraOpBinSomaEntraOpHex()
comment28.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraOpBaseXSomaEntraOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ as\ entradas\ dos\ operandos\ nas\ bases\ decimal,\nbin\uFFFDria\ e\ hexadecimal\ est\uFFFDo\ corretas.\n\n
comment29.target=void\ testEntraOpHexSomaEntraOpBin()
comment29.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraOpBaseXSomaEntraOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ as\ entradas\ dos\ operandos\ nas\ bases\ decimal,\nbin\uFFFDria\ e\ hexadecimal\ est\uFFFDo\ corretas.\n\n
comment3.target=void\ testEntraUmDuasVezes()
comment3.text=\nTeste\ do\ m\uFFFDtodo\ entraUm()\nValida\uFFFD\uFFFDo\ do\ m\uFFFDtodo\ testEntraDuasVezes()\ utilizando\ duas\ chamadas\ do\nm\uFFFDtodo\ entraUm().\n\n
comment30.target=void\ testEntraOpHexSomaEntraOpDec()
comment30.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraOpBaseXSomaEntraOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ as\ entradas\ dos\ operandos\ nas\ bases\ decimal,\nbin\uFFFDria\ e\ hexadecimal\ est\uFFFDo\ corretas.\n\n
comment31.target=void\ testSomaEntreOpDecEOpBin()
comment31.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testSomaEntreOpBaseXEOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ soma\ entre\ operandos\ em\ diferentes\ bases\nest\uFFFDo\ sendo\ realizadas\ de\ forma\ correta.\nNestes\ testes,\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\nem\ uma\ base\ apenas\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment32.target=void\ testSomaEntreOpDecEOpHex()
comment32.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testSomaEntreOpBaseXEOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ soma\ entre\ operandos\ em\ diferentes\ bases\nest\uFFFDo\ sendo\ realizadas\ de\ forma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\nem\ uma\ base\ apenas\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment33.target=void\ testSomaEntreOpBinEOpDec()
comment33.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testSomaEntreOpBaseXEOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ soma\ entre\ operandos\ em\ diferentes\ bases\nest\uFFFDo\ sendo\ realizadas\ de\ forma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\nem\ uma\ base\ apenas\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment34.target=void\ testSomaEntreOpBinEOpHex()
comment34.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testSomaEntreOpBaseXEOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ soma\ entre\ operandos\ em\ diferentes\ bases\nest\uFFFDo\ sendo\ realizadas\ de\ forma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\nem\ uma\ base\ apenas\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment35.target=void\ testSomaEntreOpHexEOpBin()
comment35.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testSomaEntreOpBaseXEOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ soma\ entre\ operandos\ em\ diferentes\ bases\nest\uFFFDo\ sendo\ realizadas\ de\ forma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\nem\ uma\ base\ apenas\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment36.target=void\ testSomaEntreOpHexEOpDec()
comment36.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testSomaEntreOpBaseXEOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ soma\ entre\ operandos\ em\ diferentes\ bases\nest\uFFFDo\ sendo\ realizadas\ de\ forma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\nem\ uma\ base\ apenas\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment37.target=void\ testEntraD11B1()
comment37.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraOpBaseXEntraOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ forma\uFFFD\uFFFDo\ de\ um\ operando,\ utilizando\ chamadas\nentraUm()\ em\ diferentes\ bases,\ est\uFFFD\ sendo\ feita\ de\ forma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\ em\ndiferentes\ bases\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment38.target=void\ testEntraB11D1()
comment38.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraOpBaseXEntraOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ forma\uFFFD\uFFFDo\ de\ um\ operando,\ utilizando\ chamadas\nentraUm()\ em\ diferentes\ bases,\ est\uFFFD\ sendo\ feita\ de\ forma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\ em\ndiferentes\ bases\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment39.target=void\ testEntraH11B1()
comment39.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraOpBaseXEntraOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ forma\uFFFD\uFFFDo\ de\ um\ operando,\ utilizando\ chamadas\nentraUm()\ em\ diferentes\ bases,\ est\uFFFD\ sendo\ feita\ de\ forma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\ em\ndiferentes\ bases\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment4.target=void\ testEntraUmTresVezes()
comment4.text=\nTeste\ do\ m\uFFFDtodo\ entraUm()\nValida\uFFFD\uFFFDo\ do\ m\uFFFDtodo\ testEntraTresVezes()\ utilizando\ tr\uFFFDs\ chamadas\ do\nm\uFFFDtodo\ entraUm().\n\n
comment40.target=void\ testEntraD11B1H1()
comment40.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraOpBaseXEntraOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ forma\uFFFD\uFFFDo\ de\ um\ operando,\ utilizando\ chamadas\nentraUm()\ em\ diferentes\ bases,\ est\uFFFD\ sendo\ feita\ de\ forma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\ em\ndiferentes\ bases\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment41.target=void\ testEntraH11B1H1()
comment41.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testEntraOpBaseXEntraOpBaseY()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ forma\uFFFD\uFFFDo\ de\ um\ operando,\ utilizando\ chamadas\nentraUm()\ em\ diferentes\ bases,\ est\uFFFD\ sendo\ feita\ de\ forma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\ em\ndiferentes\ bases\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment42.target=void\ testSomaD11B1eB11D1()
comment42.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testSomaEntreOpBasesDiversasEOpBasesDiversas()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ soma\ entre\ operandos,\ formados\ pela\ncombina\uFFFD\uFFFDo\ de\ entraUm()\ em\ diferentes\ bases,\ est\uFFFD\ sendo\ realizada\ de\nforma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\ em\ndiferentes\ bases\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment43.target=void\ testSomaD11B1eH11D1()
comment43.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testSomaEntreOpBasesDiversasEOpBasesDiversas()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ soma\ entre\ operandos,\ formados\ pela\ncombina\uFFFD\uFFFDo\ de\ entraUm()\ em\ diferentes\ bases,\ est\uFFFD\ sendo\ realizada\ de\nforma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\ em\ndiferentes\ bases\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment44.target=void\ testSomaD11B1eB11H1()
comment44.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testSomaEntreOpBasesDiversasEOpBasesDiversas()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ soma\ entre\ operandos,\ formados\ pela\ncombina\uFFFD\uFFFDo\ de\ entraUm()\ em\ diferentes\ bases,\ est\uFFFD\ sendo\ realizada\ de\nforma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\ em\ndiferentes\ bases\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment45.target=void\ testSomaH11B1eD11H1()
comment45.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testSomaEntreOpBasesDiversasEOpBasesDiversas()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ soma\ entre\ operandos,\ formados\ pela\ncombina\uFFFD\uFFFDo\ de\ entraUm()\ em\ diferentes\ bases,\ est\uFFFD\ sendo\ realizada\ de\nforma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\ em\ndiferentes\ bases\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment46.target=void\ testSomaD11B1H1eB11D1H1()
comment46.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testSomaEntreOpBasesDiversasEOpBasesDiversas()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ soma\ entre\ operandos,\ formados\ pela\ncombina\uFFFD\uFFFDo\ de\ entraUm()\ em\ diferentes\ bases,\ est\uFFFD\ sendo\ realizada\ de\nforma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\ em\ndiferentes\ bases\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment47.target=void\ testSomaB11D1H1eH11B1D1()
comment47.text=\nValida\uFFFD\uFFFDo\ dos\ m\uFFFDtodos\ testSomaEntreOpBasesDiversasEOpBasesDiversas()\nO\ objetivo\ \uFFFD\ verificar\ se\ a\ soma\ entre\ operandos,\ formados\ pela\ncombina\uFFFD\uFFFDo\ de\ entraUm()\ em\ diferentes\ bases,\ est\uFFFD\ sendo\ realizada\ de\nforma\ correta.\nNestes\ testes\ o\ operando\ \uFFFD\ formado\ por\ chamadas\ ao\ m\uFFFDtodo\ entraUm()\ em\ndiferentes\ bases\ (decimal,\ bin\uFFFDria\ ou\ hexadecimal).\n\n
comment48.target=void\ setUp()
comment48.text=\nSets\ up\ the\ test\ fixture.\nCalled\ before\ every\ test\ case\ method.\n\n
comment49.target=void\ tearDown()
comment49.text=\nTears\ down\ the\ test\ fixture.\nCalled\ after\ every\ test\ case\ method.\n\n
comment5.target=void\ testSomaSemOperador()
comment5.text=\nTeste\ do\ m\uFFFDtodo\ comandoSoma()\nValida\uFFFD\uFFFDo\ do\ m\uFFFDtodo\ testSomaSemOperador()\ utilizando\ apenas\ uma\ chamada\ndo\ m\uFFFDtodo\ comandoSoma().\n\n
comment6.target=void\ testSomaComUmOperador()
comment6.text=\nTeste\ do\ m\uFFFDtodo\ comandoSoma()\nValida\uFFFD\uFFFDo\ do\ m\uFFFDtodo\ testSomaComUmOperador()\ utilizando\ apenas\ uma\nchamada\ do\ m\uFFFDtodo\ entraUm()\ e\ uma\ chamada\ do\ m\uFFFDtodo\ comandoSoma().\n\n
comment7.target=void\ testSomaComDoisOperadores()
comment7.text=\nTeste\ do\ m\uFFFDtodo\ comandoSoma()\nValida\uFFFD\uFFFDo\ do\ m\uFFFDtodo\ testSomaComDoisOperadores()\ utilizando\ duas\ chamadas\ndo\ m\uFFFDtodo\ entraUm()\ e\ duas\ chamadas\ do\ m\uFFFDtodo\ comandoSoma().\n\n
comment8.target=void\ testLimpaAposSoma()
comment8.text=\nTeste\ do\ m\uFFFDtodo\ comandoSoma()\nValida\uFFFD\uFFFDo\ do\ m\uFFFDtodo\ testLimpaAposSoma()\ atrav\uFFFDs\ da\ chamda\ do\ m\uFFFDtodo\nlimpa()\ ap\uFFFDs\ duas\ chamadas\ do\ m\uFFFDtodo\ entraUm()\ e\ duas\ chamadas\ do\ m\uFFFDtodo\ncomandoSoma().\n\n
comment9.target=void\ testSomaAposLimpa()
comment9.text=\nTeste\ do\ m\uFFFDtodo\ comandoSoma()\nValida\uFFFD\uFFFDo\ do\ m\uFFFDtodo\ testSomaAposLima()\ atrav\uFFFDs\ da\ chamada\ do\ m\uFFFDtodo\ncomandoSoma()\ ap\uFFFDs\ duas\ chamadas\ do\ m\uFFFDtodo\ entraUm()\ e\ uma\ chamada\ do\nm\uFFFDtodo\ comandoSoma().\n\n
numComments=50
